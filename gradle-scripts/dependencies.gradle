/*
 *
 *  *  Copyright Â© 2019,Company name.
 *  *  Written under additional information.
 *
 *
 */

ext {
    supportLibVersion = '27.0.1'
    playServicesVersion = '11.6.2'
    recyclerVersion = '27.0.1'
    cardViewVersion = '27.0.1'
    constraintLayoutVersion = '1.1.0-beta5'
    butterknifeVersion = '8.7.0'
    okHttpVersion = '3.6.0'
    daggerVersion = '2.13'
    retrofitVersion = '2.2.0'
    rxjavaVersion = '2.0.8'
    rxandroidVesion = '2.0.1'
    glideVersion = '4.3.1'
    lifecycleVersion = '1.0.0'
    gsonVersion = '2.6.1'

    //Packages
    supportPackage = 'com.android.support'
    constraintLayoutPackage = 'com.android.support.constraint'
    butterKnifePackage = 'com.jakewharton'
    daggerPackage = 'com.google.dagger'
    rxjavaPackage = 'io.reactivex.rxjava2'
    okhttpPackage = 'com.squareup.okhttp3'
    retrofitPackage = 'com.squareup.retrofit2'
    glidePackage = 'com.github.bumptech.glide'
    lifecyclePackage = 'android.arch.lifecycle'

    supportDependencies = [
            appcompat        : buildDependency(supportPackage, 'appcompat-v7', supportLibVersion),
            design           : buildDependency(supportPackage, 'design', supportLibVersion),
            support          : buildDependency(supportPackage, 'support-v4', supportLibVersion),
            recyclerview     : buildDependency(supportPackage, 'recyclerview-v7', recyclerVersion),
            cardview         : buildDependency(supportPackage, 'cardview-v7', cardViewVersion),
            constraint_layout: buildDependency(constraintLayoutPackage, 'constraint-layout', constraintLayoutVersion),
            mediarouter      : buildDependency(supportPackage, 'mediarouter-v7', supportLibVersion)
    ]



    daggerDependencies = [
            dagger                : buildDependency(daggerPackage, 'dagger', daggerVersion),
            daggerProcessor       : buildDependency(daggerPackage, 'dagger-compiler', daggerVersion),
            daggerAndroidProcessor: buildDependency(daggerPackage, 'dagger-android-processor', daggerVersion),
            daggerSupport         : buildDependency(daggerPackage, 'dagger-android-support', daggerVersion),
    ]

    butterKnifeDependencies = [
            butterknife                   : buildDependency(butterKnifePackage, 'butterknife', butterknifeVersion),
            butterknifeAnnotationProcessor: buildDependency(butterKnifePackage, 'butterknife-compiler', butterknifeVersion)
    ]

    rxjavaDependencies = [
            rxjava   : buildDependency(rxjavaPackage, 'rxjava', rxjavaVersion),
            rxandroid: buildDependency(rxjavaPackage, 'rxandroid', rxandroidVesion),

    ]

    okhttp3Dependencies = [
            okhttp             : buildDependency(okhttpPackage, 'okhttp', okHttpVersion),
            logging_interceptor: buildDependency(okhttpPackage, 'logging-interceptor', okHttpVersion)

    ]

    retrofitDependencies = [
            retrofit       : buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
            converter_gson : buildDependency(retrofitPackage, 'converter-gson', retrofitVersion),
            converter_xml  : buildDependency(retrofitPackage, 'converter-simplexml', retrofitVersion),
            adapter_rxjava2: buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitVersion)
    ]

    glideDependencies = [
            glide         : buildDependency(glidePackage, 'glide', glideVersion),
            glideProcessor: buildDependency(glidePackage, 'compiler', glideVersion)
    ]

    lifecycleDependencies = [
            lifecycle         : buildDependency(lifecyclePackage, 'extensions', lifecycleVersion),
            lifecycleProcessor: buildDependency(lifecyclePackage, 'compiler', lifecycleVersion),
    ]

}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}