/*
 *
 *  *  Copyright Â© 2019,Company name.
 *  *  Written under additional information.
 *  
 *
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
    defaultConfig {
        applicationId project.APPLICATION_ID
        minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            String name = "Test.apk"
            if (variant.buildType.name == 'debug') {
                name = "Test ${variant.buildType.name.capitalize()}.apk"
            }
            output.outputFileName = new File("./../../../../../Build_" + versionCode + "/" +
                    variant.name + "/", name)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'org.mockito:mockito-core:2.7.22'
    testImplementation "android.arch.core:core-testing:1.1.0"
    androidTestImplementation 'com.squareup.retrofit2:retrofit-mock:2.0.0'
    androidTestImplementation ('com.squareup.okhttp:mockwebserver:2.7.5')
    testImplementation ('com.squareup.okhttp:mockwebserver:2.7.5')

    //support
    implementation supportDependencies.appcompat
    implementation supportDependencies.design
    implementation supportDependencies.support
    implementation supportDependencies.constraint_layout
    implementation supportDependencies.recyclerview
    implementation supportDependencies.cardview

    //butterknife
    implementation butterKnifeDependencies.butterknife
    annotationProcessor butterKnifeDependencies.butterknifeAnnotationProcessor

    //Dagger
    implementation daggerDependencies.dagger
    annotationProcessor daggerDependencies.daggerProcessor
    annotationProcessor daggerDependencies.daggerAndroidProcessor
    implementation daggerDependencies.daggerSupport

    //rx-java
    implementation rxjavaDependencies.rxjava
    implementation rxjavaDependencies.rxandroid

    implementation glideDependencies.glide
    annotationProcessor glideDependencies.glideProcessor

    implementation lifecycleDependencies.lifecycle
    annotationProcessor lifecycleDependencies.lifecycleProcessor

    //retrofit
    implementation okhttp3Dependencies.okhttp
    implementation okhttp3Dependencies.logging_interceptor
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.converter_gson
    implementation retrofitDependencies.adapter_rxjava2

    //room
    implementation RoomDependencies.room
    implementation RoomDependencies.roomRxJava
    annotationProcessor RoomDependencies.roomProcessor

}
